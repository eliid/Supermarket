/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarket;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author SampritBiswas
 */
public class NewItemGUI extends javax.swing.JFrame {

    /**
     * Creates new form NewItemGUI
     */
    String hoverID;

    public NewItemGUI() {
        initComponents();

        ArrayList<ItemType> itemType = new GetInfoFromFiles().getItemTypes();
        for (ItemType i : itemType) {
            itemTypeDropBox.addItem(i.typeName);
        }

        ArrayList<Manufacturer> manu = new GetInfoFromFiles().getManufacturer();
        for (Manufacturer i : manu) {
            itemManuDropBox.addItem(i.manuName);
        }
    }

    public void addData() {
        ArrayList<Item> item = new ArrayList<>();

        try {
            FileInputStream fileStream = new FileInputStream("DataBase.ser");
            ObjectInputStream os = new ObjectInputStream(fileStream);
            Object one = os.readObject();
            item = (ArrayList<Item>) one;
        } catch (Exception e) {
        }

        for (Item i : item) {
            if (i.getID().equalsIgnoreCase(hoverID)) {
                nameText.setText(i.getItemName());
                itemTypeDropBox.setSelectedItem(i.getType());
                itemManuDropBox.setSelectedItem(i.getManufacturer());
                purchaseText.setText(i.getPurchasePrice() + "");
                sellText.setText(i.getSellPrice() + "");
                numberText.setText(i.getNoOfItems() + "");
                weightText.setText(i.getWeight() + "");
                break;
            }
        }

    }

    String price;
    
    public void addDataSales() {
        ArrayList<Item> item = new ArrayList<>();

        try {
            FileInputStream fileStream = new FileInputStream("DataBase.ser");
            ObjectInputStream os = new ObjectInputStream(fileStream);
            Object one = os.readObject();
            item = (ArrayList<Item>) one;
        } catch (Exception e) {
        }

        for (Item i : item) {
            if (i.getItemName().equalsIgnoreCase(hoverID)) {
                nameText.setText(i.getItemName());
                itemTypeDropBox.setSelectedItem(i.getType());
                itemManuDropBox.setSelectedItem(i.getManufacturer());
                purchaseText.setText(i.getPurchasePrice() + "");
                Float f = i.getPurchasePrice();
                sellText.setText(Float.parseFloat(price)+f + "");
                numberText.setVisible(false);
                numberItemsLabel.setVisible(false);
                newType.setVisible(false);
                newManufacturer.setVisible(false);
                weightText.setText(i.getWeight() + "");
                break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        numberItemsLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        nameText = new javax.swing.JTextField();
        itemManuDropBox = new javax.swing.JComboBox();
        itemTypeDropBox = new javax.swing.JComboBox();
        purchaseText = new javax.swing.JTextField();
        sellText = new javax.swing.JTextField();
        numberText = new javax.swing.JTextField();
        weightText = new javax.swing.JTextField();
        newManufacturer = new javax.swing.JButton();
        newType = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 51));
        jLabel1.setText("Name");
        jLabel1.setBounds(40, 20, 80, 30);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 51));
        jLabel2.setText("Manufacturer");
        jLabel2.setBounds(40, 60, 110, 30);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 51));
        jLabel3.setText("Type");
        jLabel3.setBounds(40, 100, 80, 30);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 51));
        jLabel4.setText("Purchase price");
        jLabel4.setBounds(40, 140, 90, 30);
        jLayeredPane1.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 51));
        jLabel5.setText("Sell price");
        jLabel5.setBounds(40, 190, 60, 30);
        jLayeredPane1.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        numberItemsLabel.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        numberItemsLabel.setForeground(new java.awt.Color(51, 0, 51));
        numberItemsLabel.setText("Number of items");
        numberItemsLabel.setBounds(40, 240, 110, 30);
        jLayeredPane1.add(numberItemsLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 51));
        jLabel7.setText("Weight");
        jLabel7.setBounds(40, 290, 60, 30);
        jLayeredPane1.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        submitButton.setText("Submit");
        submitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        submitButton.setBounds(160, 340, 90, 30);
        jLayeredPane1.add(submitButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        nameText.setBounds(160, 20, 149, 30);
        jLayeredPane1.add(nameText, javax.swing.JLayeredPane.DEFAULT_LAYER);

        itemManuDropBox.setMaximumRowCount(5);
        itemManuDropBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        itemManuDropBox.setBounds(161, 60, 150, 30);
        jLayeredPane1.add(itemManuDropBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        itemTypeDropBox.setMaximumRowCount(5);
        itemTypeDropBox.setBounds(160, 100, 150, 30);
        jLayeredPane1.add(itemTypeDropBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        purchaseText.setBounds(160, 140, 150, 30);
        jLayeredPane1.add(purchaseText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sellText.setBounds(160, 190, 150, 30);
        jLayeredPane1.add(sellText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        numberText.setBounds(160, 240, 150, 30);
        jLayeredPane1.add(numberText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        weightText.setBounds(160, 290, 150, 30);
        jLayeredPane1.add(weightText, javax.swing.JLayeredPane.DEFAULT_LAYER);

        newManufacturer.setText("New");
        newManufacturer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newManufacturerActionPerformed(evt);
            }
        });
        newManufacturer.setBounds(353, 60, 60, 30);
        jLayeredPane1.add(newManufacturer, javax.swing.JLayeredPane.DEFAULT_LAYER);

        newType.setText("New");
        newType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTypeActionPerformed(evt);
            }
        });
        newType.setBounds(353, 103, 60, 30);
        jLayeredPane1.add(newType, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/supermarket/images/im12.jpg"))); // NOI18N
        jLabel8.setBounds(-6, 0, 460, 390);
        jLayeredPane1.add(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        try {
            Item it = new Item();

            it.setItemName(nameText.getText());
            //it.setManufacturer(manuText.getText());
            it.setManufacturer(itemManuDropBox.getSelectedItem().toString());

            it.setNoOfItems(Integer.parseInt(numberText.getText()));
            it.setSellPrice(Integer.parseInt(sellText.getText()));
            it.setWeight(Float.parseFloat(weightText.getText()));
            it.setPurchasePrice(Integer.parseInt(purchaseText.getText()));
            //it.setType(typeText.getText());
            it.setType(itemTypeDropBox.getSelectedItem().toString());

            it.generateID();
            DataBase d = new DataBase();

            /*
             * Check whether the item exits or not
             */
            d.addItem(it);
            dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Enter Valid Values!!");
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void newTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTypeActionPerformed
        // TODO add your handling code here:
        GetInfoFromFiles g = new GetInfoFromFiles();
        ArrayList<ItemType> itemType = g.getItemTypes();
        ItemType addItemType = new ItemType();

        String strT = JOptionPane.showInputDialog(null, "Enter the new Item Type : ",
                "New Item Type", JOptionPane.QUESTION_MESSAGE);
        if(strT==null || strT.equalsIgnoreCase("")){
            return;
        }

        for (ItemType i : itemType) {
            if (i.typeName.equalsIgnoreCase(strT)) {
                JOptionPane.showMessageDialog(this, "This Item already exists!!!");
                return;
            }
        }
        int newItemID = 0;

        for (ItemType i : itemType) {
            if (Integer.parseInt(i.typeId) > newItemID) {
                newItemID = Integer.parseInt(i.typeId);
            }
        }
        newItemID++;

        addItemType.typeId = newItemID + "";
        addItemType.typeName = strT;
        itemType.add(addItemType);
        itemTypeDropBox.addItem(strT);

        //TODO add to file

        try {
            FileOutputStream fileStream = new FileOutputStream("ItemType.ser");
            ObjectOutputStream os = new ObjectOutputStream(fileStream);
            os.writeObject(itemType);
            os.close();
        } catch (IOException ex) {
            System.out.println("\nFile Not Found!!!");
            ex.printStackTrace();
        }

        try {
            WriteToServer wr = new WriteToServer();
            wr.writeItemType();
        } catch (Exception e) {
        }
        itemTypeDropBox.setSelectedItem(strT);
    }//GEN-LAST:event_newTypeActionPerformed

    private void newManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newManufacturerActionPerformed
        GetInfoFromFiles g = new GetInfoFromFiles();
        ArrayList<Manufacturer> manu = g.getManufacturer();
        Manufacturer addManu = new Manufacturer();

        String strT = JOptionPane.showInputDialog(null, "Enter the new Manufacturer : ",
                "New Manufacturer", JOptionPane.QUESTION_MESSAGE);
        
        if(strT==null || strT.equalsIgnoreCase("")){
            return;
        }

        for (Manufacturer i : manu) {
            if (i.manuName.equalsIgnoreCase(strT)) {
                JOptionPane.showMessageDialog(this, "This Manufacturer already exists!!!");
                return;
            }
        }

        /**
         * *****************************
         * Proper manufacturer id
         *
         */
        Manufacturer check = new Manufacturer();
        int size = manu.size();
        Random r = new Random();
        long newMenuID = (r.nextInt(99999) + 10000);

        for (int i = 0; i < size; i++) {
            check = manu.get(i);
            if (check.manuId.equalsIgnoreCase(newMenuID + "")) {
                i = 0;
                newMenuID = r.nextInt(99999) + 10000;
            }
        }


        addManu.manuId = newMenuID + "";
        addManu.manuName = strT;
        manu.add(addManu);
        itemManuDropBox.addItem(strT);

        //TODO add to file

        try {
            FileOutputStream fileStream = new FileOutputStream("Manu.ser");
            ObjectOutputStream os = new ObjectOutputStream(fileStream);
            os.writeObject(manu);
            os.close();
        } catch (IOException ex) {
            System.out.println("\nFile Not Found!!!");
            ex.printStackTrace();
        }

        try {
            WriteToServer wr = new WriteToServer();
            wr.writeManufacturer();
        } catch (Exception e) {
        }

        itemManuDropBox.setSelectedItem(strT);
    }//GEN-LAST:event_newManufacturerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewItemGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox itemManuDropBox;
    private javax.swing.JComboBox itemTypeDropBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JTextField nameText;
    public javax.swing.JButton newManufacturer;
    public javax.swing.JButton newType;
    private javax.swing.JLabel numberItemsLabel;
    private javax.swing.JTextField numberText;
    private javax.swing.JTextField purchaseText;
    private javax.swing.JTextField sellText;
    public javax.swing.JButton submitButton;
    private javax.swing.JTextField weightText;
    // End of variables declaration//GEN-END:variables
}
